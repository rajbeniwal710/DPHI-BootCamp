# -*- coding: utf-8 -*-
"""prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FXsjckHL7-OKiBToU1_14wj31R1_gW78
"""

import pandas as pd
data = pd.read_csv("https://raw.githubusercontent.com/dphi-official/Datasets/master/travel_insurance/Training_set_label.csv")

from sklearn.preprocessing import OrdinalEncoder

import numpy as np

encoder = OrdinalEncoder()

data['Agency'] = encoder.fit_transform(np.array(data['Agency'].values.reshape(-1,1)))
data['Product Name'] = encoder.fit_transform(np.array(data['Product Name'].values.reshape(-1,1)))
data['Destination'] = encoder.fit_transform(np.array(data['Destination'].values.reshape(-1,1)))
data['Distribution Channel'] = encoder.fit_transform(np.array(data['Distribution Channel'].values.reshape(-1,1)))
data['Agency Type'] = encoder.fit_transform(np.array(data['Agency Type'].values.reshape(-1,1)))
data['Gender'] = data['Gender'].fillna("Not Known")
data['Gender'] = encoder.fit_transform(np.array(data['Gender'].values.reshape(-1,1)))



data.head()

data.info()

print(data['Agency'].unique())
print(data['Agency Type'].unique())
print(data['Distribution Channel'].unique())
print()
print("Unique Products name:\n ",data['Product Name'].unique())
print()
print("Toatal Unique Products name:\n ",data['Product Name'].nunique())
print(data['Destination'].unique())
print()
print("Total number of Destinations: ", data['Destination'].nunique())

x = data.iloc[:,:-1]
y = data.iloc[:,-1]

from sklearn.model_selection import cross_val_score
from sklearn.model_selection import RepeatedStratifiedKFold
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

from statistics import *

model = RandomForestClassifier()
# evaluate the model
cv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)
n_scores = cross_val_score(model, x, y, scoring='accuracy', cv=cv, error_score='raise')
# report performance
print('Accuracy: )', n_scores.mean(), n_scores.std())

m_fitted = model.fit(x,y)

y_pred = m_fitted.predict(x)

print(classification_report(y, y_pred))

data = pd.read_csv('https://raw.githubusercontent.com/dphi-official/Datasets/master/travel_insurance/Testing_set_label.csv')
data.head()

data['Agency'] = encoder.fit_transform(np.array(data['Agency'].values.reshape(-1,1)))
data['Product Name'] = encoder.fit_transform(np.array(data['Product Name'].values.reshape(-1,1)))
data['Destination'] = encoder.fit_transform(np.array(data['Destination'].values.reshape(-1,1)))
data['Distribution Channel'] = encoder.fit_transform(np.array(data['Distribution Channel'].values.reshape(-1,1)))
data['Agency Type'] = encoder.fit_transform(np.array(data['Agency Type'].values.reshape(-1,1)))
data['Gender'] = data['Gender'].fillna("Not Known")
data['Gender'] = encoder.fit_transform(np.array(data['Gender'].values.reshape(-1,1)))



prediction = m_fitted.predict(data)

prediction = pd.DataFrame(prediction)

prediction.head()

prediction.index = data.index # its important for comparison. Here "test_new" is your new test dataset
prediction.columns = ["prediction"]
from google.colab import files
prediction.to_csv('prediction.csv',index=False) 
files.download('prediction.csv')

